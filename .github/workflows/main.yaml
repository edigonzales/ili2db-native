name: ili2pg-native
on:
  push:
    paths-ignore:
      - '**.md'
      - 'docs/**.md'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version?'
        required: true

jobs:  
  build:
    env:
      INSTALL_DIR: jdk
      NIK_HOME: jdk/bellsoft-liberica-vm-core-openjdk17-22.2.0
    strategy:
      matrix:
        #os: ['ubuntu-20.04']
        os: ['windows-2022']
        #Â os: ['ubuntu-20.04', 'macos-12']
        # os: ['ubuntu-20.04', 'macos-12', 'windows-2022']
        include:
          # - os: 'ubuntu-20.04'
          #   label: 'linux'
          #   jdkDownloadUrl: https://download.bell-sw.com/vm/22.2.0/bellsoft-liberica-vm-core-openjdk17.0.4.1+1-22.2.0+3-linux-amd64.tar.gz
          # - os: 'macos-12'
          #   label: 'osx'
          #   jdkDownloadUrl: https://download.bell-sw.com/vm/22.2.0/bellsoft-liberica-vm-core-openjdk17.0.4.1+1-22.2.0+3-macos-amd64.tar.gz
          - os: 'windows-2022'
            label: 'windows'
            jdkDownloadUrl: https://download.bell-sw.com/vm/22.2.0/bellsoft-liberica-vm-core-openjdk17.0.4.1+1-22.2.0+3-windows-amd64.zip
    runs-on: ${{matrix.os}}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 'Download Liberica NIK (Linux and macOS)'
        if: ${{ runner.os != 'Windows' }}
        run: |
          curl -L ${{ matrix.jdkDownloadUrl}} -o libericavm.zip
          mkdir -p ${{ env.INSTALL_DIR }}
          tar -C ${{ env.INSTALL_DIR }} -xzf libericavm.zip

      - name: 'Download Liberica NIK (Windows)'
        if: ${{ runner.os == 'Windows' }}
        run: |
          curl -L ${{ matrix.jdkDownloadUrl}} -o libericavm.zip
          mkdir -p ${{ env.INSTALL_DIR }}
          unzip libericavm.zip -d ${{ env.INSTALL_DIR }} 
          ls -la 
          ls -la ${{ env.INSTALL_DIR }} 
        shell: bash

      - name: 'Install build dependencies (Windows)'
        if: ${{ runner.os == 'Windows' }}
        run: |
          echo %PATH%
          setx -m JAVA_HOME $(pwd)\${{ env.NIK_HOME }}
          setx -m PATH=%PATH%;%JAVA_HOME%\bin
          echo %PATH%
          echo %JAVA_HOME%
          choco install visualstudio2017-workload-vctools

      - name: 'Build native image (Windows)'
        if: ${{ runner.os == 'Windows' }}
        run: |
          echo %PATH%
          setx -m JAVA_HOME $(pwd)\${{ env.NIK_HOME }}
          setx -m PATH=%PATH%;%JAVA_HOME%\bin
          ./gradlew.cmd nativeCompile nativeImageDistZip -i

      - name: 'Install build dependencies (Linux)'
        if: ${{ runner.os == 'Linux' }}
        run: sudo apt-get install gcc zlib1g-dev build-essential libxi-dev libxrender-dev

      - name: 'Build native image (Linux)'
        if: ${{ runner.os == 'Linux' }}
        run: |
          export JAVA_HOME=$PWD/${{ env.NIK_HOME }}
          export PATH=$JAVA_HOME/bin:$PATH
          ./gradlew nativeCompile nativeImageDistZip -i
        shell: bash

      - name: 'Build native image (macOS)'
        if: ${{ runner.os == 'macOS' }}
        run: |
          export JAVA_HOME=$PWD/${{ env.NIK_HOME }}/Contents/Home
          export PATH=$JAVA_HOME/bin:$PATH
          ./gradlew nativeCompile nativeImageDistZip -i

      - uses: actions/upload-artifact@v2
        if: ${{ success() }}
        with:
          name: artifacts-native
          path: build/distributions/*.zip

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.head.outputs.content }}
          fetch-depth: 0

      - name: 'Download all build artifacts'
        uses: actions/download-artifact@v2

      - name: 'List artifacts'
        run: |
          ls -la /home/runner/work/ili2pg-native/ili2pg-native/artifacts-native
          ls -la /home/runner/work/ili2pg-native/ili2pg-native/
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica' 
          java-version: '17'

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Release distributions
        run: |
          ./gradlew -i jreleaserRelease
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ success() && github.ref == 'refs/heads/main'}}
